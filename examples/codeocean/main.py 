
# CODE ACCOMPANYING THE ECOSET PAPER "Ecoset: an ecologically more valid visual diet for deep learning yields better models of human high-level visual cortex" <insert URL here>

# This code allows to extract activation patterns from deep neural networks (DNNs) trained on ecoset or ILSVRC2012 in response to an arbitrary set of stimuli.

# Output (activations and RDMs) will be saved in folder "/results". Files contained in "/results" will be shown in the right panel of the codeocean GUI - "Timeline" - which  is located below the button "Reproducible Run" used to start running the code.

# Please choose from the following options

import os

# neural net architecture
DNN_architectures = ['vNet', 'AlexNet']
DNN_architecture = DNN_architectures[1] # "0" - vNet, "1" - AlexNet

# image set used for training vNet instances
training_sets = ['ecoset', 'ILSVRC2012']
training_set = training_sets[0] # "0" - ecoset, "1" - ILSVRC2012

# network instance: training seed (vNet: 1 to 10, AlexNet: 1 to 5) used to initialize the weights before network training
training_seeds = [1]# vNet: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], AlexNet: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# layers of interest
layers = [1]#[1, 2, 3, 4, 5, 6, 7, 8, 9, 10] # vNet layers 1-10, [11:12] vNet output before (11) and after (12) softmax; Alexnet layers 1-7, [8:9] AlexNet output before (8) and after (9) softmax

# Image set fed through the network to obtain activations. Accepted image file format jpg, accepted image file endings: ['.jpg', '.jpeg', '.JPG', '.JPEG']
image_dir_parent = '/data/input_image_sets/'
IMAGE_DIRS = ['cichy_92_only_4_stimuli_debugging', 'cichy_92', 'horikawa_1200_training']
IMAGE_DIR = os.path.join(image_dir_parent, IMAGE_DIRS[1]) # "0" - 4 test images, "1" - 92 stimuli from Cichy et al. 2014, "2" - 1200 stimuli from Horikawa 2018

# Distance measure used for computing RDMs
DISTANCE_MEASURE = "correlation" # in the ecoset paper we used correlation distance ("correlation") to compute RDMs. Other commonly used options include (more options available via scipy.spatial.distance.pdist): ‘cityblock’, ‘correlation’, ‘cosine’, ‘euclidean’

# compute RDMs
compute_RDMs_bool = 1 # 0: only extract activations, 1: extract activations and compute RDMs


# order of arguments for function extract_activations_compute_RDMs.py
"""
sys.argv[1]: CKTP_PATH: model_folder_file_path excluding filename ending
sys.argv[2]: output_size: model output number of dimensions
sys.argv[3]: random_seed: seed used to initialized initial weight setting before network training
sys.argv[4]: DISTANCE_MEASURE: distance measure used to compute RDMs
sys.argv[5]: IMAGE_DIR: activations in response to this set of (test) images will be extracted
sys.argv[6]: training_set: image training set used to train network (ecoset vs. ILSVRC2012)
sys.argv[7]: layers: layer of interest to extract activations and compute RDMs
sys.argv[8]: compute_RDMs_bool: whether RDMs should be computed
"""


# extract activations
from subprocess import call
import sys

#for all layers selected for extraction
for layer in layers:
    #for all selected training seeds
    for training_seed in training_seeds:
        if DNN_architecture == 'vNet':
            if training_set == 'ecoset':
                output_size = 565
                CKPT_PATH = '/data/models/vNET/ecoset_training_seeds_01_to_10/training_seed_{}/model.ckpt_epoch79'.format(str(training_seed).zfill(2))
            elif training_set == 'ILSVRC2012':
                output_size = 1000
                CKPT_PATH = '/data/models/vNET/ILSVRC_training_seeds_01_to_10/training_seed_{}/model.ckpt_epoch79'.format(str(training_seed).zfill(2))

            call(["python", "./extract_activations_compute_RDMs_vNet.py", CKPT_PATH, str(output_size), str(training_seed), DISTANCE_MEASURE, IMAGE_DIR, training_set, str(layer - 1), str(compute_RDMs_bool)])

        elif DNN_architecture == 'AlexNet':
            if training_set == 'ecoset':
                output_size = 565
                CKPT_PATH = '/data/models/AlexNet/ecoset_training_seeds_01_to_10/training_seed_{}/model.ckpt_epoch89'.format(str(training_seed).zfill(2))
            elif training_set == 'ILSVRC2012':
                output_size = 1000
                CKPT_PATH = '/data/models/AlexNet/ILSVRC_training_seeds_01_to_10/training_seed_{}/model.ckpt_epoch89'.format(str(training_seed).zfill(2))

            call(["python", "./extract_activations_compute_RDMs_AlexNet.py", CKPT_PATH, str(output_size), str(training_seed), DISTANCE_MEASURE, IMAGE_DIR, training_set, str(layer - 1), str(compute_RDMs_bool)])
